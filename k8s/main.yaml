apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cardano-node
spec:
  selector:
    matchLabels:
      app: explorer
  serviceName: cardano-service
  replicas: 1
  template:
    metadata:
      labels:
        app: explorer
    spec:
      containers:
        - name: cardano-node
          image: inputoutput/cardano-node
          volumeMounts:
            - name: unix-socket
              mountPath: /ipc
            - name: node-db
              mountPath: /data/db
            - name: node-config
              mountPath: /opt/cardano
          env:
            - name: NETWORK
              value: mainnet

          command:
            - 'cardano-node'
            - 'run'
          args:
            - '--config'
            - '/opt/cardano/config.yaml'

        - name: kupo
          image: cardanosolutions/kupo
          volumeMounts:
            - name: unix-socket
              mountPath: /opt/cardano/cnode/sockets
            - name: node-config
              mountPath: /opt/cardano
          args:
            - --node-socket
            - /opt/cardano/cnode/sockets/node.socket
            - --node-config
            - /opt/cardano/config.yaml
            - --since
            - 16588737.4e9bbbb67e3ae262133d94c3da5bffce7b1127fc436e7433b87668dba34c354a
            - --in-memory
          ports:
            - containerPort: 1442

      volumes:
        - name: unix-socket
          emptyDir: {}

        - name: node-config
          configMap:
            name: cardano-configmap
            items:
              - key: "config.yaml"
                path: "config.yaml

  volumeClaimTemplates:
    - metadata:
        name: node-db
      spec:
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: explorer
spec:
  selector:
    app: explorer
  ports:
    - port: 1447
      targetPort: 1447
